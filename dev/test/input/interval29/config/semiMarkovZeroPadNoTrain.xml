<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!-- "semiMarkovZeroPadNoTrain"
	inference: semi-Markov Viterbi
	training: fixed weights (uses MaximumLikelihoodSemiMarkovGradient and AllSparseLengthCacheProcessor, but this irrelevant since fixed weights)
	fanciest feature: NodeBoundary with pads set to zero

	theoretically equivalent to: Markov model with fixed weights, treating the NodeBoundary feature as just a node,
		as long as the sequence length remains less than the max lookback of 5000.
 -->
<beans>
  <bean id="inputFormat" class="calhoun.analysis.crf.io.CompositeInput">
  	<property name="components">
		<list>
		  <bean class="calhoun.analysis.crf.io.CompositeInput$InputComponent">
		  	<property name="name" value="ref"/>
		  	<property name="inputSequence"><bean class="calhoun.analysis.crf.io.StringInput"/></property>
		  </bean>
		</list>
  	</property>
  	<property name="hiddenSequenceReader">
  		<bean class="calhoun.analysis.crf.io.IntInputInterval29"/>
  	</property>
  </bean>
  <bean id="outputHandler" class="calhoun.analysis.crf.io.OutputHandlerGeneCallStatsInterval29">
		<property name="manager" ref="model"/>
  </bean>    
  <bean id="inference" class="calhoun.analysis.crf.solver.SemiMarkovViterbi">
	<property name="cacheProcessor" ref="cache"/>
  </bean>
  <bean id="optimizer" class="calhoun.analysis.crf.solver.FixedWeightOptimizer">
  </bean>
  <bean id="cache" class="calhoun.analysis.crf.solver.check.AllSparseLengthCacheProcessor">
	<property name="lookbackArraySize" value="5000"/>
	<property name="lookbackArrayFeatureSize" value="3"/>
	<property name="semiMarkovSetup">
	  <bean id="lengths" class="calhoun.analysis.crf.SemiMarkovSetup">
		<property name="ignoreSemiMarkovSelfTransitions" value="true"/>
		<property name="maxLengths">
			<list>
				<value>5000</value>
				<value>5000</value>
				<value>5000</value>
				<value>5000</value>
				<value>5000</value>
				<value>5000</value>
				<value>5000</value>
				<value>5000</value>
				<value>5000</value>
				<value>5000</value>
				<value>5000</value>
				<value>5000</value>
				<value>5000</value>
				<value>2</value>
				<value>2</value>
				<value>2</value>
				<value>2</value>
				<value>2</value>
				<value>2</value>
				<value>2</value>
				<value>2</value>
				<value>2</value>
				<value>2</value>
				<value>2</value>
				<value>2</value>
				<value>2</value> <!-- 26 -->				
				<value>2</value>
				<value>2</value>
				<value>2</value> <!-- 29 -->				
			</list>
		</property>
	  </bean>
	</property>
  </bean>
  <bean id="model" class="calhoun.analysis.crf.features.interval29.Interval29Model">
	<property name="componentFeatures">
	  <list>
		  <bean class="calhoun.analysis.crf.features.interval29.GeneConstraintsInterval29">
		  	<property name="inputComponent" value="ref"/>
		  </bean>
		  <bean class="calhoun.analysis.crf.features.interval29.ReferenceBasePredictorNodeOnlyInterval29">
		  	<property name="inputComponent" value="ref"/>
		  </bean>
		  <bean class="calhoun.analysis.crf.features.interval29.PWMInterval29">
		  	<property name="inputComponent" value="ref"/>
		  </bean>
		  
	  </list>
	</property>
  </bean>
</beans>
